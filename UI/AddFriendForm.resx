<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fy0A42ze0ajiAAAAAElFTkSuQmCC
</value>
  </data>
</root>